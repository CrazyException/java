package DisruptorSample;import sun.misc.Unsafe;import java.lang.reflect.Field;import java.security.AccessController;import java.security.PrivilegedExceptionAction;/** * Created with IntelliJ IDEA. Project: test-jar Author: Kevin Date: * 16/5/23 Time: 下午3:47 */public class TestObject {	public long value;	public TestObject(){	};	public TestObject(long value) {		this.value = value;	}	public void setValue(long value) {		this.value = value;	}	public long getValue() {		return value;	}	private static final Unsafe THE_UNSAFE;	static	{		try		{			final PrivilegedExceptionAction<Unsafe> action = new PrivilegedExceptionAction<Unsafe>()			{				public Unsafe run() throws Exception				{					Field theUnsafe = Unsafe.class.getDeclaredField("theUnsafe");					theUnsafe.setAccessible(true);					return (Unsafe) theUnsafe.get(null);				}			};			THE_UNSAFE = AccessController.doPrivileged(action);		}		catch (Exception e)		{			throw new RuntimeException("Unable to load unsafe", e);		}	}}